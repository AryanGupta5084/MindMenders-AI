// utils/helplines.js
// This module provides a centralized and easy-to-manage way to serve
// regional mental health helpline numbers. It's designed to be simple
// to extend with new languages and to provide a safe fallback.
// TODO: In the future, this data could be moved to a CMS or a database
//       to allow for updates without needing to deploy new code.

// A standard, high-priority message that gets appended to all helpline lists.
const DEFAULT_EMERGENCY_NOTE = 'If you are in immediate danger, call your local emergency number (112 in India).';

// The core data structure for our helplines.
// It's a simple object mapping two-letter language codes to an array of
// pre-formatted strings, making it easy to add or update information.
const HELPLINES = {
  en: [
    'ЁЯУЮ **KIRAN (Govt. of India 24/7):** 1800-599-0019',
    'ЁЯУЮ **Vandrevala Foundation (24/7):** 9999666555 (Phone or WhatsApp)',
    'ЁЯУЮ **Fortis Stress Helpline (24/7):** +91-8376804102',
    'ЁЯУЮ **Sneha Foundation (Tamil Nadu):** 044-24640050',
  ],
  hi: [
    'ЁЯУЮ **рдХрд┐рд░рдг рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди (рднрд╛рд░рдд рд╕рд░рдХрд╛рд░ 24/7):** 1800-599-0019',
    'ЁЯУЮ **рд╡рдВрджреНрд░реЗрд╡рд╛рд▓рд╛ рдлрд╛рдЙрдВрдбреЗрд╢рди (24/7):** 9999666555 (рдлреЛрди рдпрд╛ рд╡реНрд╣рд╛рдЯреНрд╕рдПрдк)',
    'ЁЯУЮ **рдЖрд╕рд░рд╛ (24/7):** 9820466726',
  ],
  ta: [
    'ЁЯУЮ **роХро┐ро░рогрпН ро╣рпЖро▓рпНрокрпНро▓рпИройрпН (24/7):** 1800-599-0019',
    'ЁЯУЮ **ро╕рпНроирпЗро╣ро╛ роГрокро╡рпБрогрпНроЯрпЗро╖ройрпН (родрооро┐ро┤рпНроиро╛роЯрпБ):** 044-24640050',
  ],
  te: [
    'ЁЯУЮ **р░Хр░┐р░░р░гр▒Н р░╣р▒Жр░▓р▒Нр░кр▒НтАМр░▓р▒Ир░ир▒Н (24/7):** 1800-599-0019',
    'ЁЯУЮ **р░░р▒Лр░╖р▒Нр░ир░┐ р░Яр▒Нр░░р░╕р▒Нр░Яр▒Н (р░╣р▒Ир░жр░░р░╛р░мр░╛р░жр▒Н):** 040-66202000',
  ],
  pa: [
    'ЁЯУЮ **риХри┐ри░рии ри╣рйИри▓рикри▓ри╛риИрии (24/7):** 1800-599-0019',
    'ЁЯУЮ **ри╡рй░рижрйНри░рйЗри╡ри╛ри▓ри╛ рилри╛риКриВрибрйЗри╕ри╝рии (24/7):** 9999666555',
  ],
  bn: [
    'ЁЯУЮ **ржХрж┐рж░ржг рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи (рзирзк/рзн):** 1800-599-0019',
    'ЁЯУЮ **ржнрж╛ржирзНржжрзНрж░рзЗржУржпрж╝рж╛рж▓рж╛ ржлрж╛ржЙржирзНржбрзЗрж╢ржи (24/7):** 9999666555',
  ],
  ml: [
    'ЁЯУЮ **р┤Хр┤┐р┤░р╡║ р┤╣р╡Жр╡╜р┤кр╡НтАМр┤▓р╡Ир╡╗ (24/7):** 1800-599-0019',
    'ЁЯУЮ **р┤ор╡Ир┤др╡Нр┤░р┤┐ (р┤Хр╡Кр┤Ър╡Нр┤Ър┤┐):** 0484-2540530',
  ],
  kn: [
    'ЁЯУЮ **р▓Хр▓┐р▓░р▓гр│Н р▓╕р▓╣р▓╛р▓пр▓╡р▓╛р▓гр▓┐ (24/7):** 1800-599-0019',
    'ЁЯУЮ **р▓╡р▓Вр▓жр│Нр▓░р│Жр▓╡р▓╛р▓▓р▓╛ р▓лр│Мр▓Вр▓бр│Зр▓╢р▓ир│Н (24/7):** 9999666555',
  ],
  mr: [
    'ЁЯУЮ **рдХрд┐рд░рдг рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди (реирек/рен):** 1800-599-0019',
    'ЁЯУЮ **рдЖрд╕рд░рд╛ (24/7):** 9820466726',
  ],
  gu: [
    'ЁЯУЮ **ркХрк┐рк░ркг рк╣рлЗрк▓рлНрккрк▓рк╛ркЗрки (24/7):** 1800-599-0019',
    'ЁЯУЮ **рк▓рк╛ркЗркл рк╣рлЛркк рк╣рлЗрк▓рлНрккрк▓рк╛ркЗрки:** 1800-233-3330',
  ],
};

/**
 * Gets a list of helpline strings for a given locale.
 * It intelligently handles locales like "en-US" or "hi-IN" by just using the
 * primary language code ("en", "hi"). If the requested language isn't found,
 * it safely falls back to English.
 *
 * @param {string} [locale='en'] - The locale or language code (e.g., "en", "hi-IN").
 * @returns {string[]} An array of strings, ready to be displayed in the UI.
 */
function getHelplines(locale = 'en') {
  // Gracefully handle null/undefined locales and extract the primary language code (e.g., "hi" from "hi-IN").
  const lang = (locale || 'en').toLowerCase().split('-')[0];

  // Get the lines for the requested language, or default to English if it doesn't exist.
  const lines = HELPLINES[lang] || HELPLINES.en;

  // Always include the emergency note at the end for safety.
  return [...lines, `тЪая╕П ${DEFAULT_EMERGENCY_NOTE}`];
}

/**
 * A utility function to dynamically add or replace a set of helplines at runtime.
 * This could be useful for an admin panel or for loading helplines from an external source.
 *
 * @param {string} lang - The two-letter language code (e.g., 'en').
 * @param {string[]} lines - An array of helpline strings to set for that language.
 */
function setHelplines(lang, lines) {
  // Basic validation to prevent setting invalid data.
  if (!lang || !Array.isArray(lines) || !lines.length) return;
  HELPLINES[lang.toLowerCase()] = lines;
}

// Export the primary functions for use in other parts of the application.
module.exports = { getHelplines, setHelplines };
